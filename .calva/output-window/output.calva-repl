; (ns counter
;   (:require [reagent.core :as r]
;             [reagent.dom :as rd]))

; (def root (js/document.querySelector "#root"))

; (def app (js/document.querySelector "#app"))

(defn hello-world [name]
  (print "Hello" name (+ 1 3)))

(:name {:name "Alex", :age 50})

(get [1, 2] 0)

(first `(1, 2, 3))

(def today (.toDateString (new js/Date)))

(defn render [greeting]
  (print greeting)
  (set! (.-innerHTML root) (str "<h1>Hello World it's " today " today </h1>")))

(def click-count (r/atom 0))

(defn counting-component
  []
  [:div
   "The state has a value : " @click-count
   [:button
    {
     :on-click (fn [] (swap! click-count inc))
     }
    "click me"
    ]])

(render "Hello World")


(rd/render [counting-component] app)
#'counter/hello-world
cljs::counter=> 
(hello-world)
"Hello World"
cljs::counter=> 
#'counter/hello-world
cljs::counter=> 
(hello-world)
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (0) passed to counter/hello-world
--------------------------------------------------------------------------------

cljs::counter=> 
(hello-world "Alex")
"Alex"
cljs::counter=> 
#'counter/hello-world
cljs::counter=> 
(hello-world "Alex")
Hello  Alex
nil
cljs::counter=> 
#'counter/hello-world
cljs::counter=> 
(hello-world "Alex")
Hello Alex
nil
cljs::counter=> 
#'counter/hello-world
cljs::counter=> 
(hello-world "Alex")
"Alex"
cljs::counter=> 
Hello #object[cljs$core$name] 4
cljs::counter=> 
(hello-world "Alex")
"Alex"
cljs::counter=> 
#'counter/hello-world
cljs::counter=> 
(hello-world "Alex")
Hello Alex 4
nil
cljs::counter=> 
"Alex"
cljs::counter=> 
(:name {:name "Alex", :age 50})
"Alex"
cljs::counter=> 
nil
cljs::counter=> 
1
cljs::counter=> 
#object[TypeError TypeError: 1.call is not a function]
cljs::counter=> 
1
cljs::counter=> 
; nREPL Connection was closed
